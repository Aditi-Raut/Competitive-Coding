// { Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
{
    public static void main(String[] args) throws IOException
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());
        while(T-->0)
        {
            String S = br.readLine().trim();
            String[] S1 = S.split(" ");
            int n = Integer.parseInt(S1[0]);
            int amount  = Integer.parseInt(S1[1]);
            String s = br.readLine().trim();
            String[] s1 = s.split(" ");
            int[] nums = new int[n];
            for(int i = 0; i < s1.length; i++)
                nums[i] = Integer.parseInt(s1[i]);
            Solution ob = new Solution();
            int ans = ob.MinCoin(nums, amount);
            System.out.println(ans);           
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution
{
    public int MinCoin(int[] nums, int amount)
    {
        //{
        // Code here
        // if(amount == 0) return 0;
        
        // int min = 100000;
        // for(int i = 0; i<nums.length; i++)
        // {
        //     if(amount>=nums[i])
        //     {
        //     int mix = MinCoin(nums,amount-nums[i]);
        //     if(mix!=-1)
        //         min = Math.min(min, 1 + mix);
        //     }
        // }
        
        // if(min == 100000) return -1;
        
        // return min;
    //}
        int dp[] = new int[amount+1];
        int l = nums.length;
        Arrays.fill(dp,100000);
        dp[0] = 0;
        
        for(int i = 1; i<=amount; i++ )
        {
            for(int j = 0; j<l;j++)
            {
                if(nums[j]<=i)
                {
                    int mix = dp[i-nums[j]];
                    if(mix!=100000)
                    {
                        dp[i] = Math.min(mix+1,dp[i]);
                    }
                }
            }
        }
        return dp[amount] == 100000? -1 : dp[amount];
        
        
    }
}
