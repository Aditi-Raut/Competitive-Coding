// { Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*; 
class GFG{
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());
        while (t-- > 0) {
            int n = Integer.parseInt(br.readLine().trim());
            String[] str = br.readLine().trim().split(" ");
            int[] a = new int[n];
            for (int i = 0; i < n; i++) 
                a[i] = Integer.parseInt(str[i]);
            String[] xy = br.readLine().trim().split(" ");
            int x = Integer.parseInt(xy[0]);
            int y = Integer.parseInt(xy[1]);
            Solution g = new Solution();
            System.out.println(g.minDist(a, n, x, y));
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution {
    int minDist(int a[], int n, int x, int y) {
        // code here
        int dist[] = new int[2]; 
        dist[0] = dist[1] = -1;
        int min_dist = n+1;
        for(int i = 0; i<n; i++)
        {
            if(a[i] == x)
            {
                dist[0] = i;
            }
            else if(a[i] == y)
            {
                dist[1] = i;
            }
            else
            {
                continue;
            }
            
            if(dist[0]!=-1 && dist[1]!=-1)
            {
                if(Math.abs(dist[0]-dist[1]) < min_dist)
                {
                    min_dist = Math.abs(dist[0]-dist[1]);
                }
            }
           
        }
        if(min_dist>=n) return -1;
        return min_dist;
        
    }
}
